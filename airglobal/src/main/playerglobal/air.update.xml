<?xml version="1.0" encoding="UTF-8"?><apiPackage xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="air.update" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiPackage/apiPackage "><apiName class="- topic/title reference/title apiRef/apiName ">air.update</apiName><apiDetail class="- topic/body reference/refbody apiRef/apiDetail "/><apiClassifier languages="" id="air.update:ApplicationUpdater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ApplicationUpdater</apiName><shortdesc class="- topic/shortdesc ">
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->
	The ApplicationUpdater class defines the basic functionality of the update framework for 
	Adobe&amp;#xAE; AIR&amp;#xAE; applications, without providing any default user interface.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	The ApplicationUpdater class defines the basic functionality of the update framework for 
	Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup> applications, without providing any default user interface.
	(The ApplicationUpdaterUI class includes update functionality <i class="+ topic/ph hi-d/i ">and</i> a default user interface.) 
		
	<p class="- topic/p ">This class is included in the applicationupdater_ui.swc file,
	included in the Adobe AIR SDK. The applicationupdater_ui.swc file is in the 
	frameworks/libs/air directory of the AIR SDK.</p>
	
	<p class="- topic/p ">Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flex™ Builder™ loads this class automatically 
	when you create a project for Adobe AIR. You should include the SWC file when compiling
	the application using the Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flex™ SDK.</p>
	
	
	
	
		
	<p class="- topic/p ">Managing updates of applications can be complicated. The AIR update framework provides
	APIs to assist developers in providing good update capabilities
	in AIR applications. The functionality in the AIR update framework
	assists developers in the following:</p>
	
	<ul class="- topic/ul "><li class="- topic/li ">
	<p class="- topic/p ">Periodically checking for updates based on an interval
	or at the request of the user</p>
	</li><li class="- topic/li ">
	<p class="- topic/p ">Downloading AIR files (updates) from a web source</p>
	</li><li class="- topic/li ">
	<p class="- topic/p ">Alerting the user on the first run of the newly installed
	version</p>
	</li><li class="- topic/li ">
	<p class="- topic/p ">Confirming that the user wants to check for updates</p>
	</li><li class="- topic/li ">
	<p class="- topic/p ">Displaying information on the new update version to the user</p>
	</li><li class="- topic/li ">
	<p class="- topic/p ">Displaying download progress and error information to the
	user</p>
	</li></ul>
	
	<p class="- topic/p ">The AIR update framework lets you store information about the
	update version of an AIR application in simple XML configuration
	files. For most applications, setting up these configuration files
	and including some basic code provides good update functionality
	to the end user.</p>
	
	<p class="- topic/p ">Use the AIRUpdater class if you want to define your own user interface
	for use with the AIR update framework.</p>
	
	<p class="- topic/p ">The update process includes a sequence of states. The <codeph class="+ topic/ph pr-d/codeph ">currentState</codeph> 
	property of the updater object reflects the current state of the updater:</p>
	
	<p class="- topic/p "><adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">
	currentState value
	</entry><entry class="- topic/entry ">
	Description
	</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">"UNINITIALIZED"</entry><entry class="- topic/entry ">The updater has not been initialized.</entry></row><row class="- topic/row "><entry class="- topic/entry ">"INITIALIZING"</entry><entry class="- topic/entry ">The updater is initializing.</entry></row><row class="- topic/row "><entry class="- topic/entry ">"READY"</entry><entry class="- topic/entry ">The updater has been initialized</entry></row><row class="- topic/row "><entry class="- topic/entry ">"BEFORE_CHECKING"</entry><entry class="- topic/entry ">The updater has not yet checked for the update descriptor file.</entry></row><row class="- topic/row "><entry class="- topic/entry ">"CHECKING"</entry><entry class="- topic/entry ">The updater is checking for an update descriptor file.</entry></row><row class="- topic/row "><entry class="- topic/entry ">"AVAILABLE"</entry><entry class="- topic/entry ">The update descriptor file is available.</entry></row><row class="- topic/row "><entry class="- topic/entry ">"DOWNLOADING"</entry><entry class="- topic/entry ">The updater is downloading the AIR file.</entry></row><row class="- topic/row "><entry class="- topic/entry ">"DOWNLOADED"</entry><entry class="- topic/entry ">The updater has downloaded the AIR file.</entry></row><row class="- topic/row "><entry class="- topic/entry ">"INSTALLING"</entry><entry class="- topic/entry ">The updater is installing the AIR file.</entry></row><row class="- topic/row "><entry class="- topic/entry ">"PENDING_INSTALLING"</entry><entry class="- topic/entry ">The updater has initialized and there are pending updates.</entry></row></tbody></tgroup></adobetable></p>
	
	<p class="- topic/p ">When testing an application using the AIR Debug Launcher (ADL) application, attempting to update the application
	results in an IllegalOperationError exception.</p>
	
	<p class="- topic/p ">The AIR update framework is only supported in the desktop profile. It is not supported 
	for extended desktop applications (applications installed with a native installer),
	and it is not supported on the mobile profile (iPhone applications written with
	ActionScript 3.0). Check the <codeph class="+ topic/ph pr-d/codeph ">Updater.isSupported</codeph> property at runtime
	to see if the update framework is supported.</p>
	
	<p product="flex" class="- topic/p ">For details on using the AIR update framework, see the "Updating AIR Applications"
	chapter of <xref href="http://www.adobe.com/go/learn_air_flex3_en" scope="external" class="- topic/xref ">Developing Adobe AIR Applications with Apache Flex</xref>.</p> 
	
	<p product="flash" class="- topic/p ">For details on using the AIR update framework, see the "Updating AIR Applications"
	chapter of <xref href="http://www.adobe.com/go/learn_air_flash_en" scope="external" class="- topic/xref ">Developing Adobe AIR Applications with Adobe Flash</xref>.</p> 
	
	 
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdaterUI" class="- topic/link "><linktext class="- topic/linktext ">ApplicationUpdaterUI</linktext></link><link href="flash.desktop.xml#Updater" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Updater</linktext></link></related-links><adobeApiEvent id="air.update:ApplicationUpdater_flash.events.ErrorEvent.ERROR_error" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched when an error occurred either during initialization
	or during the update process (if something unexpected happens).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ErrorEvent.ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched when an error occurred either during initialization
	or during the update process (if something unexpected happens).
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched as the update file is downloaded.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched as the update file is downloaded. 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR_fileUpdateError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">fileUpdateError</apiName><shortdesc class="- topic/shortdesc "> 
	 Dispatched when an error occurs validating the file passed
	 as the airFile parameter in a call to the installFromAIRFile() method.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.StatusFileUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Dispatched when an error occurs validating the file passed
	 as the <codeph class="+ topic/ph pr-d/codeph ">airFile</codeph> parameter in a call to the <codeph class="+ topic/ph pr-d/codeph ">installFromAIRFile()</codeph> method.
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.StatusFileUpdateEvent.FILE_UPDATE_STATUS_fileUpdateStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">fileUpdateStatus</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched after the updater successfully validates the
	file in the call to the installFromAIRFile() method.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.StatusFileUpdateEvent.FILE_UPDATE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.StatusFileUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched after the updater successfully validates the
	file in the call to the <codeph class="+ topic/ph pr-d/codeph ">installFromAIRFile()</codeph> method.
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.DownloadErrorEvent.DOWNLOAD_ERROR_downloadError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">downloadError</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched if there is an error while connecting or downloading
	the update file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.DownloadErrorEvent.DOWNLOAD_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.DownloadErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched if there is an error while connecting or downloading
	the update file. It is also dispatched for invalid HTTP statuses
	(such as 404 - File not found).
	
	<p class="- topic/p ">When this event is dispatched the periodic timer is automatically
	restarted (if the delay is greater than 0). </p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.StatusUpdateErrorEvent.UPDATE_ERROR_updateError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">updateError</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched if an error occurs while trying to download or parse the update descriptor file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.StatusUpdateErrorEvent.UPDATE_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.StatusUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched if an error occurs while trying to download or parse the update descriptor file.
	
	<p class="- topic/p ">When the updater dispatches this event, the periodic timer
	is automatically restarted (if the delay setting is greater than
	0). The application should consider hiding any error dialog boxes
	when the updater dispatches a new <codeph class="+ topic/ph pr-d/codeph ">checkForUpdate</codeph> event. </p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.StatusUpdateEvent.UPDATE_STATUS_updateStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">updateStatus</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched after the updater successfully downloads and
	interprets the update descriptor file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.StatusUpdateEvent.UPDATE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.StatusUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched after the updater successfully downloads and
	interprets the update descriptor file. 
	
	<p class="- topic/p ">The default behavior is to start downloading the update if the
	available of the available property of the StatusUpdateEvent object
	is set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph>. The default behavior can be prevented
	only when using the ApplicationUpdater class, not when using the 
	ApplicationUpdatorUI class..</p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.UpdateEvent.BEFORE_INSTALL_beforeInstall" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">beforeInstall</apiName><shortdesc class="- topic/shortdesc "> 
	 Dispatched just before installing the update, after the installUpdate() method
	 was called.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.UpdateEvent.BEFORE_INSTALL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Dispatched just before installing the update, after the <codeph class="+ topic/ph pr-d/codeph ">installUpdate()</codeph> method
	 was called. Sometimes, it is useful to prevent the installation
	 of the update at this time, because the user could lose all current work when 
	 the runtime exits the application to install the update. 
	 
	 <p class="- topic/p ">Calling this event's <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> method
	 postpones the installation until the next restart. If you call 
	 the <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> method, no additional update 
	 process can be started during this application session (via a call 
	 to the <codeph class="+ topic/ph pr-d/codeph ">installUpdate()</codeph> method or because of the periodic check). </p>
	 
	 <p class="- topic/p ">The default behavior for ApplicationUpdater library is to download
	 the update descriptor file. You can call the <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> method
	 to cancel this behavior.</p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.UpdateEvent.DOWNLOAD_COMPLETE_downloadComplete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">downloadComplete</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched when the download of the update file is complete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.UpdateEvent.DOWNLOAD_COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched when the download of the update file is complete.
	
	<p class="- topic/p ">Usually this event is used to display a message asking if 
	the user wants to proceed with the installation of the update. </p>
	
	<p class="- topic/p ">The default behavior for the the ApplicationUpdater library is
	to automatically call the <codeph class="+ topic/ph pr-d/codeph ">installUpdate()</codeph> method.</p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.UpdateEvent.DOWNLOAD_START_downloadStart" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">downloadStart</apiName><shortdesc class="- topic/shortdesc "> 
	 Dispatched after a call to the downloadUpdate() method
	 and the connection to the server is established.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.UpdateEvent.DOWNLOAD_START</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Dispatched after a call to the <codeph class="+ topic/ph pr-d/codeph ">downloadUpdate()</codeph> method
	 and the connection to the server is established. When using ApplicationUpdater
	 library, you may want the event handler for this event to display
	 a progress bar to report the download progress to the user. 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.UpdateEvent.CHECK_FOR_UPDATE_checkForUpdate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">checkForUpdate</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched before the update process begins, just before the
	updater tries to download the update descriptor file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.UpdateEvent.CHECK_FOR_UPDATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched before the update process begins, just before the
	updater tries to download the update descriptor file. 
	The updater can dispatch this event as a result of directly
	calling the <codeph class="+ topic/ph pr-d/codeph ">checkNow()</codeph> method or because the periodic
	check timer expired. 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater_air.update.events.UpdateEvent.INITIALIZED_initialized" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">initialized</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched after the initialization is complete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.UpdateEvent.INITIALIZED</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched after the initialization is complete. 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="air.update:ApplicationUpdater:ApplicationUpdater" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ApplicationUpdater</apiName><shortdesc class="- topic/shortdesc ">
		The constructor function.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The constructor function. 
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="air.update:ApplicationUpdater:cancelUpdate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">cancelUpdate</apiName><shortdesc class="- topic/shortdesc ">
		Cancels the update process.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Cancels the update process. Calling this method cancels any
		pending downloads, deleting any incomplete downloaded files, and
		restarts the periodic check timer.
		
		<p class="- topic/p ">The update process can be canceled at any time except when the state
		machine is in "UNINITIALIZED" or "INITIALIZING" state. It does nothing 
		when it is called in one of the "UNINITIALIZED" or "INITIALIZING"
		states.</p>
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.update:ApplicationUpdater:checkForUpdate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">checkForUpdate</apiName><shortdesc class="- topic/shortdesc ">
		Asynchronously downloads and interprets
		the update descriptor file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Asynchronously downloads and interprets
		the update descriptor file. Calling this method advances the updater
		state to "CHECKING". Call this method only if the <codeph class="+ topic/ph pr-d/codeph ">checkForUpdate</codeph> event
		was cancelled.
		
		<p class="- topic/p ">This method only executes when the updater is in the "BEFORE_CHECKING"
		state. </p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:checkForUpdate_updateStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">updateStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:StatusUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">The updater has successfully downloaded and interpreted the update descriptor file.
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">The updater has successfully downloaded and interpreted the update descriptor file.</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater:checkForUpdate_updateError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">updateError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:StatusUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">An error occured while trying to download or parse the update descriptor file.
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">An error occured while trying to download or parse the update descriptor file.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdater:checkNow" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">checkNow</apiName><shortdesc class="- topic/shortdesc ">
		Starts the update process.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Starts the update process. Calling
		this method does not stop the periodic timer; however, the method detects
		that an update process is running and will skip the current iteration.
		
		<p class="- topic/p ">This method only executes if the current state is "READY". </p>
		
		<p class="- topic/p ">This method can result in the updater object dispatching the following event:</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:checkNow_checkForUpdate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">checkForUpdate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dispatched just before the update process begins.
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Dispatched just before the update process begins.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdater:downloadUpdate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">downloadUpdate</apiName><shortdesc class="- topic/shortdesc ">
		Asynchronously downloads the update file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Asynchronously downloads the update file. Calling this method
		advances the state machine to "DOWNLOADING". This method needs to be called
		only if the StatusUpdateEvent.UPDATE_STATUS event was cancelled when
		the available property of the event was true.
		
		<p class="- topic/p ">This method only executes if the current state is "AVAILABLE".</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:downloadUpdate_downloadStart" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">downloadStart</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dispatched after the connection to the server is established. 
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Dispatched after the connection to the server is established.</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater:downloadUpdate_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dispatched after the initialization is complete.
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Dispatched after the initialization is complete.</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater:downloadUpdate_downloadError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">downloadError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:DownloadErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dispatched if there is an error while connecting or downloading the update file. 
		It is also dispatched for invalid HTTP statuses (such as 404 - File not found).
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Dispatched if there is an error while connecting or downloading the update file.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdater:initialize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">initialize</apiName><shortdesc class="- topic/shortdesc ">
		 Initializes the updater.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Initializes the updater. Calling this method
		does the following: 
		
		<p class="- topic/p "><ol class="- topic/ol "><li class="- topic/li ">
		<p class="- topic/p ">It initializes the update framework,
		silently (and synchronously) installing any pending updates. You
		should call this method during application startup, since it may
		restart the application.</p>
		</li><li class="- topic/li ">
		
		<p class="- topic/p ">It checks if there is a postponed update and installs it.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p ">If something went wrong with a prior update, it clears the
		update file and version information from the storage area.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p ">If the periodic timer delay has expired, it starts the update process; otherwise
		it starts the periodic timer. However, when testing an application using 
		the AIR Debug Launcher (ADL) application, attempting to update the 
		application results in a IllegalOperationError exception.</p>
		</li></ol></p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:initialize_initialized" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">initialized</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">The initialization is complete. 
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">The initialization is complete.</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater:initialize_error" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">There is an error during initialization.
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">There is an error during initialization.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdater:installFromAIRFile" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">installFromAIRFile</apiName><shortdesc class="- topic/shortdesc ">
		Starts the update process using a local AIR file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">file</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.filesystem:File</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">The local AIR file to install.
		
		</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Starts the update process using a local AIR file. 
		
		<p class="- topic/p ">Calling this
		method has no effect if an update process is running (if the state
		is not <codeph class="+ topic/ph pr-d/codeph ">"DOWNLOADED"</codeph>).</p>
		
		<p class="- topic/p ">This function is useful
		for an application that has the <codeph class="+ topic/ph pr-d/codeph ">customUpdateUI</codeph> element
		set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph> in the application descriptor file.</p>
		
		<p class="- topic/p ">When testing an application using the AIR Debug Launcher (ADL) application, 
		calling this method results in an IllegalOperationError exception.</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:installFromAIRFile_fileUpdateStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">fileUpdateStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:StatusFileUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dispatched after the updater successfully 
		validates the AIR file.
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Dispatched after the updater successfully 
		validates the AIR file.</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdater:installFromAIRFile_updateError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">updateError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:StatusFileUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dispatched if an error occurs while trying 
		parse the update descriptor file.
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Dispatched if an error occurs while trying 
		parse the update descriptor file.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdater:installUpdate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">installUpdate</apiName><shortdesc class="- topic/shortdesc ">
		Installs the update file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Installs the update file. Calling the method
		advances the state machine to "INSTALLING" and needs to be called
		only if the <codeph class="+ topic/ph pr-d/codeph ">downLoadComplete</codeph> event was cancelled.
		
		<p class="- topic/p ">Call this method when the updater is in the "DOWNLOADED" state. Calling
		it in any other state will do nothing.</p>
		
		<p class="- topic/p ">When testing an application using the AIR Debug Launcher (ADL) application, 
		calling this method results in an IllegalOperationError exception.</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdater:installUpdate_beforeInstall" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">beforeInstall</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dispatched just before installing the update. Sometimes it is useful 
		to prevent the installation of the update at this time, because the user could lose all current work when 
		the runtime exits the application to install the update.
		 
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Dispatched just before installing the update.</shortdesc></adobeApiEvent></apiOperation><apiValue id="air.update:ApplicationUpdater:configurationFile:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">configurationFile</apiName><shortdesc class="- topic/shortdesc ">
		The location of the configuration file that sets the values for delay and
		updateURL properties.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The location of the configuration file that sets the values for <codeph class="+ topic/ph pr-d/codeph ">delay</codeph> and
		<codeph class="+ topic/ph pr-d/codeph ">updateURL</codeph> properties. If this property points to a non-existent file, calling 
		the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> method results in an Error being thrown.
		
		<p class="- topic/p ">Here is a sample configuration file:</p>
		
		<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> &lt;?xml version="1.0" encoding="utf-8"?&gt; 
 		&lt;configuration xmlns="http://ns.adobe.com/air/framework/update/configuration/1.0" &gt;
 		  &lt;url&gt;app:/server/update.xml&lt;/url&gt;
 		  &lt;delay&gt;1&lt;/delay&gt;
		&lt;/configuration&gt;</codeblock>
		
		<p class="- topic/p ">Instead of loading a configuration file, you can use <ph class="- topic/ph ">ActionScript</ph> 
		 code to set the <codeph class="+ topic/ph pr-d/codeph ">delay</codeph> and <codeph class="+ topic/ph pr-d/codeph ">updateURL</codeph> 
		properties.</p> 
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdater/delay" class="- topic/link "><linktext class="- topic/linktext ">delay</linktext></link><link href="air.update.xml#ApplicationUpdater/updateURL" class="- topic/link "><linktext class="- topic/linktext ">updateURL</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdater:currentState:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentState</apiName><shortdesc class="- topic/shortdesc ">
		The internal state of the updater.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The internal state of the updater. The property can be set to the following values:
		
		<p class="- topic/p "><ul class="- topic/ul "><li class="- topic/li ">
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">"UNINITIALIZED"</codeph>—The updater has not been initialized.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">"INITIALIZING"</codeph>—The updater is initializing.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">"READY"</codeph>—The updater has been initialized</p>
		</li><li class="- topic/li ">
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">"BEFORE_CHECKING"</codeph>—The updater has not yet
		checked for the update descriptor file.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">"CHECKING"</codeph>—The updater is checking for an
		update descriptor file.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">"AVAILABLE"</codeph>—The update descriptor file is
		available.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">"DOWNLOADING"</codeph>—The updater is downloading
		the AIR file.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">"DOWNLOADED"</codeph>—The updater has downloaded
		the AIR file.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">"INSTALLING"</codeph>—The updater is installing the
		AIR file.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p "><codeph class="+ topic/ph pr-d/codeph ">"PENDING_INSTALLING"</codeph>—The updater has initialized
		and there are pending updates.</p>
		</li></ul></p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:currentVersion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentVersion</apiName><shortdesc class="- topic/shortdesc ">
		The current version of the application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The current version of the application. This property is set during
		a call to the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> method. It is set to
		the version from the application descriptor file.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:delay:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">delay</apiName><shortdesc class="- topic/shortdesc ">
		The interval, in days, between periodic checks of new updates.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiDefaultValue>0
		
		</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The interval, in days, between periodic checks of new updates.
		
		<p class="- topic/p ">A value of 0 (the default value) indicates
		that the timer is not active, so no periodic check is done. This
		can be set either via this property or via the configuration file.
		When the value is set using both methods, the value set using the
		property is used.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:isFirstRun:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isFirstRun</apiName><shortdesc class="- topic/shortdesc ">
		Whether this is the first run after a successful update (true) or not 
		(false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Whether this is the first run after a successful update (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) or not 
		(<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). The updater sets this value during the call to the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> 
		method. The developer should check that <codeph class="+ topic/ph pr-d/codeph ">isFirstRun</codeph> is set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph> if
		there is a need to migrate data from one version to another.
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdater/wasPendingUpdate" class="- topic/link "><linktext class="- topic/linktext ">wasPendingUpdate</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdater:isNewerVersionFunction:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isNewerVersionFunction</apiName><shortdesc class="- topic/shortdesc ">
		A function that the updater should use to perform version comparisons.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Function</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		A function that the updater should use to perform version comparisons.
		By default, the update framework does a
		version comparison to detect whether the version from the
		remote site is newer than the version of the installed application.
		However, sometimes the default comparison does not match the developer's
		versioning scheme. Set this property to provide a new function that
		does the comparison. 
		
		<p class="- topic/p ">The default comparision function accepts
		versions like <i class="+ topic/ph hi-d/i ">x.y.z</i>, where x, y, and z can contain letters
		and digits. There are some special conditions that the default comparision function
		recognizes. If the test function finds <codeph class="+ topic/ph pr-d/codeph ">"alpha"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"beta"</codeph>, 
		or <codeph class="+ topic/ph pr-d/codeph ">"rc"</codeph> in the version strings,
		the order is <codeph class="+ topic/ph pr-d/codeph ">alpha</codeph> &lt; <codeph class="+ topic/ph pr-d/codeph ">beta</codeph> &lt; <codeph class="+ topic/ph pr-d/codeph ">rc</codeph>.</p>
		
		</apiDesc><example conref="examples\ApplicationUpdater.configurationFunction.1.as" class="- topic/example "> The following code defines a custom function, <codeph class="+ topic/ph pr-d/codeph ">customFn</codeph>, for the <codeph class="+ topic/ph pr-d/codeph ">appUpdate</codeph> updater object. 
 The example function is intentionally simple. Your custom function should return a Boolean value based on the rules of your
 versioning scheme.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
appUpdate.isNewerVersionFunction = customFn; 

function customFn (currentVersion:String, updateVersion:String):Boolean 
{
    return updateVersion &gt; currentVersion;
}
</codeblock></example></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:previousApplicationStorageDirectory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">previousApplicationStorageDirectory</apiName><shortdesc class="- topic/shortdesc ">
		The previous location of the application storage directory, if it changed
		after an update.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The previous location of the application storage directory, if it changed
		after an update. The application storage directory location changes after
		an upgrade with a certificate migration. If there is no certificate
		migration, the application storage directory does not change when the
		user updates the application. and this property is set to <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
		This property is set during a call to the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> method. 
		
		<p class="- topic/p ">A developer can sign new version of AIR application with a new certificate
		if the developer uses the <codeph class="+ topic/ph pr-d/codeph ">-migrate</codeph> option when packaging the AIR
		file with ADT. If a new version of an AIR application uses a new signing certificate, 
		the local storage directory of the application changes when the user installs  
		the new version. Use this property to transfer data from the old application
		storage directory to the new application storage directory 
		(<codeph class="+ topic/ph pr-d/codeph ">File.applicationStorageDirectory</codeph>). For more information,
		see "Signing an AIR file to change the application certificate" in the 
		"Creating an AIR application using the command line tools" chapter of the 
		Adobe AIR developer's guide.</p>
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:previousVersion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">previousVersion</apiName><shortdesc class="- topic/shortdesc ">
		The previous version of the application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The previous version of the application. This property is set during
		a call to the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> method. Returns the <i class="+ topic/ph hi-d/i ">previous version</i> of
		the application before the upgrade (set only if <codeph class="+ topic/ph pr-d/codeph ">isfirstRun</codeph> is <codeph class="+ topic/ph pr-d/codeph ">true</codeph>);
		otherwise it is set to <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:updateDescriptor:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">updateDescriptor</apiName><shortdesc class="- topic/shortdesc ">
		The content of the update descriptor file downloaded from the update URL.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">XML</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The content of the update descriptor file downloaded from the update URL. This property is
		non-null only the updater object dispatches an <codeph class="+ topic/ph pr-d/codeph ">updateStatus</codeph> event.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:updateURL:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">updateURL</apiName><shortdesc class="- topic/shortdesc ">
		The location of the update descriptor file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The location of the update descriptor file. Any location
		valid for a URLRequest path is accepted. This is the only mandatory
		setting required by the updater. You can set the update URL either via this
		property or via the configuration file. When the value is set using
		both methods, the updater uses the value set using this property.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdater:wasPendingUpdate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">wasPendingUpdate</apiName><shortdesc class="- topic/shortdesc ">
		Whether there was a postponed update, even if it failed 
		to install (true); false otherwise.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Whether there was a postponed update, even if it failed 
		to install (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>); <codeph class="+ topic/ph pr-d/codeph ">false</codeph> otherwise.
		The updater sets this property during a call to the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> method. 
		Use the <codeph class="+ topic/ph pr-d/codeph ">wasPendingUpdate</codeph> and <codeph class="+ topic/ph pr-d/codeph ">isFirstRun</codeph> properties
		to check if an update failed to install (in which case <codeph class="+ topic/ph pr-d/codeph ">wasPendingUpdate</codeph>
		is set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph> and <codeph class="+ topic/ph pr-d/codeph ">isFirstRun</codeph> is set to <codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdater/isFirstRun" class="- topic/link "><linktext class="- topic/linktext ">isFirstRun</linktext></link></related-links></apiValue></apiClassifier><apiClassifier languages="" id="air.update:ApplicationUpdaterUI" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiClassifier/apiClassifier "><apiName class="- topic/title reference/title apiRef/apiName ">ApplicationUpdaterUI</apiName><shortdesc class="- topic/shortdesc ">
	The ApplicationUpdaterUI class defines the basic functionality of the update framework for 
	Adobe&amp;#xAE; AIR&amp;#xAE; applications, and it provides a default user interface.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiClassifierDetail class="- topic/body reference/refbody apiRef/apiDetail apiClassifier/apiClassifierDetail "><apiClassifierDef class="- topic/section reference/section apiRef/apiDef apiClassifier/apiClassifierDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiStatic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiStatic "/><apiBaseClassifier class="- topic/xref reference/xref apiRef/apiRelation apiClassifier/apiBaseClassifier ">flash.events:EventDispatcher</apiBaseClassifier></apiClassifierDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
	The ApplicationUpdaterUI class defines the basic functionality of the update framework for 
	Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> AIR<sup class="+ topic/ph hi-d/sup ">®</sup> applications, and it provides a default user interface.
	(The ApplicationUpdater class defines update functionality <i class="+ topic/ph hi-d/i ">without</i> implementing 
	a default user interface.) 
	
	<p class="- topic/p ">This class is included in the applicationupdater_ui.swc file,
	included in the Adobe AIR SDK. The applicationupdater_ui.swc file is in the 
	frameworks/libs/air directory of the AIR SDK. The version in the frameworks/libs/air
	directory in the AIR 2 SDK is for Flex 4 development. If you use Flex 3, use the version
	in the frameworks/libs/air/flex3 subdirectory. </p>
	
	<p class="- topic/p ">Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flex™ Builder™ loads this class automatically 
	when you create a project for Adobe AIR. You should include the SWC file when compiling
	the application using the Adobe<sup class="+ topic/ph hi-d/sup ">®</sup> Flex™ SDK.</p>
	
	
	
	
		
	<p class="- topic/p ">Managing updates of applications can be complicated. The AIR update framework provides
	APIs to assist developers in providing good update capabilities
	in AIR applications. The functionality in the AIR update framework
	assists developers in the following:</p>
	
	<ul class="- topic/ul "><li class="- topic/li ">
	<p class="- topic/p ">Periodically checking for updates based on an interval
	or at the request of the user</p>
	</li><li class="- topic/li ">
	<p class="- topic/p ">Downloading AIR files (updates) from a web source</p>
	</li><li class="- topic/li ">
	<p class="- topic/p ">Alerting the user on the first run of the newly installed
	version</p>
	</li><li class="- topic/li ">
	<p class="- topic/p ">Confirming that the user wants to check for updates</p>
	</li><li class="- topic/li ">
	<p class="- topic/p ">Displaying information on the new update version to the user</p>
	</li><li class="- topic/li ">
	<p class="- topic/p ">Displaying download progress and error information to the
	user</p>
	</li></ul>
	
	<p class="- topic/p ">The AIR update framework lets you store information about the
	update version of an AIR application in simple XML configuration
	files. For most applications, setting up these configuration files
	and including some basic code provides good update functionality
	to the end user.</p>
	
	<p class="- topic/p ">The AIRUpdateUI class implements a default user interface that
	your application can use. It provides the user with basic information
	and options related to application updates.</p>
	
	<p class="- topic/p ">The update process goes through a sequence of states:</p>
	
	<p class="- topic/p "><adobetable class="innertable"><tgroup cols="2" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry ">
	State
	</entry><entry class="- topic/entry ">
	Description
	</entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry ">Uninitialized</entry><entry class="- topic/entry ">The updater has not been initialized.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Initializing</entry><entry class="- topic/entry ">The updater is initializing.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Ready</entry><entry class="- topic/entry ">The updater has been initialized</entry></row><row class="- topic/row "><entry class="- topic/entry ">Before checking</entry><entry class="- topic/entry ">The updater has not yet checked for the update descriptor file.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Checking</entry><entry class="- topic/entry ">The updater is checking for an update descriptor file.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Available</entry><entry class="- topic/entry ">The update descriptor file is available.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Downloading</entry><entry class="- topic/entry ">The updater is downloading the AIR file.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Downloaded</entry><entry class="- topic/entry ">The updater has downloaded the AIR file.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Installing</entry><entry class="- topic/entry ">The updater is installing the AIR file.</entry></row><row class="- topic/row "><entry class="- topic/entry ">Pending install</entry><entry class="- topic/entry ">The updater has initialized and there are pending updates.</entry></row></tbody></tgroup></adobetable></p>
	
	<p class="- topic/p ">When testing an application using the AIR Debug Launcher (ADL) application, attempting to update the application
	results in an IllegalOperationError exception.</p>
	
	<p class="- topic/p ">The AIR update framework is only supported in the desktop profile. It is not supported 
	for extended desktop applications (applications installed with a native installer),
	and it is not supported on the mobile profile (iPhone applications written with
	ActionScript 3.0). Check the <codeph class="+ topic/ph pr-d/codeph ">Updater.isSupported</codeph> property at runtime
	to see if the update framework is supported.</p>
	
	<p product="flex" class="- topic/p ">For details on using the AIR update framework, see the "Updating AIR Applications"
	chapter of <xref href="http://www.adobe.com/go/learn_air_flex3" scope="external" class="- topic/xref ">Developing Adobe AIR Applications with Apache Flex</xref>.</p> 
	
	<p product="flash" class="- topic/p ">For details on using the AIR update framework, see the "Updating AIR Applications"
	chapter of <xref href="http://www.adobe.com/go/learn_air_flash" scope="external" class="- topic/xref ">Developing Adobe AIR Applications with Adobe Flash</xref>.</p> 
	
	 
	
	</apiDesc></apiClassifierDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdater" class="- topic/link "><linktext class="- topic/linktext ">ApplicationUpdater</linktext></link><link href="flash.desktop.xml#Updater" class="- topic/link "><linktext class="- topic/linktext ">flash.desktop.Updater</linktext></link></related-links><adobeApiEvent id="air.update:ApplicationUpdaterUI_flash.events.ErrorEvent.ERROR_error" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched when an error occurred either during initialization
	or during the update process (if something unexpected happens).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ErrorEvent.ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched when an error occurred either during initialization
	or during the update process (if something unexpected happens).
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_flash.events.ProgressEvent.PROGRESS_progress" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">progress</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched as the update file is downloaded.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">flash.events.ProgressEvent.PROGRESS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events.ProgressEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched as the update file is downloaded. 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR_fileUpdateError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">fileUpdateError</apiName><shortdesc class="- topic/shortdesc "> 
	 Dispatched when an error occurs validating the file passed
	 as the airFile parameter in a call to the installFromAIRFile() method.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.StatusFileUpdateErrorEvent.FILE_UPDATE_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.StatusFileUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Dispatched when an error occurs validating the file passed
	 as the <codeph class="+ topic/ph pr-d/codeph ">airFile</codeph> parameter in a call to the <codeph class="+ topic/ph pr-d/codeph ">installFromAIRFile()</codeph> method.
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.StatusFileUpdateEvent.FILE_UPDATE_STATUS_fileUpdateStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">fileUpdateStatus</apiName><shortdesc class="- topic/shortdesc "> 
	
	Dispatched after the updater successfully validates the
	file in the call to the installFromAIRFile() method.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.StatusFileUpdateEvent.FILE_UPDATE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.StatusFileUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	
	Dispatched after the updater successfully validates the
	file in the call to the <codeph class="+ topic/ph pr-d/codeph ">installFromAIRFile()</codeph> method.
	
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.DownloadErrorEvent.DOWNLOAD_ERROR_downloadError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">downloadError</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched if there is an error while connecting or downloading
	the update file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.DownloadErrorEvent.DOWNLOAD_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.DownloadErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched if there is an error while connecting or downloading
	the update file. It is also dispatched for invalid HTTP statuses
	(such as 404 - File not found).
	
	<p class="- topic/p ">When this event is dispatched the periodic timer is automatically
	restarted (if the delay is greater than 0). </p>
	
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.StatusUpdateErrorEvent.UPDATE_ERROR_updateError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">updateError</apiName><shortdesc class="- topic/shortdesc "> 
	
	Dispatched if an error occurs while trying to download or parse the update descriptor file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.StatusUpdateErrorEvent.UPDATE_ERROR</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.StatusUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	
	Dispatched if an error occurs while trying to download or parse the update descriptor file.
	
	<p class="- topic/p ">When the updater dispatches this event, the periodic timer
	is automatically restarted (if the delay setting is greater than
	0). The application should consider hiding any error dialog boxes
	when the updater dispatches a new <codeph class="+ topic/ph pr-d/codeph ">checkForUpdate</codeph> event. </p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.StatusUpdateEvent.UPDATE_STATUS_updateStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">updateStatus</apiName><shortdesc class="- topic/shortdesc "> 
	
	Dispatched after the updater successfully downloads and
	interprets the update descriptor file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.StatusUpdateEvent.UPDATE_STATUS</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.StatusUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	
	Dispatched after the updater successfully downloads and
	interprets the update descriptor file. 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.BEFORE_INSTALL_beforeInstall" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">beforeInstall</apiName><shortdesc class="- topic/shortdesc "> 
	 Dispatched just before installing the update, after the installUpdate() method
	 was called.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.UpdateEvent.BEFORE_INSTALL</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	 Dispatched just before installing the update, after the <codeph class="+ topic/ph pr-d/codeph ">installUpdate()</codeph> method
	 was called. Sometimes, it is useful to prevent the installation
	 of the update at this time, because the user could lose all current work when 
	 the runtime exits the application to install the update. 
	 
	 <p class="- topic/p ">Calling this event's <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> method
	 postpones the installation until the next restart. If you call 
	 the <codeph class="+ topic/ph pr-d/codeph ">preventDefault()</codeph> method, no additional update 
	 process can be started during this application session (via a call 
	 to the <codeph class="+ topic/ph pr-d/codeph ">installUpdate()</codeph> method or because of the periodic check). </p>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.DOWNLOAD_COMPLETE_downloadComplete" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">downloadComplete</apiName><shortdesc class="- topic/shortdesc "> 
	
	Dispatched when the download of the update file is complete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.UpdateEvent.DOWNLOAD_COMPLETE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	
	Dispatched when the download of the update file is complete.
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.DOWNLOAD_START_downloadStart" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">downloadStart</apiName><shortdesc class="- topic/shortdesc "> 
	
	 Dispatched after a call to the downloadUpdate() method
	 and the connection to the server is established.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.UpdateEvent.DOWNLOAD_START</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	
	 Dispatched after a call to the <codeph class="+ topic/ph pr-d/codeph ">downloadUpdate()</codeph> method
	 and the connection to the server is established. When using ApplicationUpdater
	 library, you may want the event handler for this event to display
	 a progress bar to report the download progress to the user. 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.CHECK_FOR_UPDATE_checkForUpdate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">checkForUpdate</apiName><shortdesc class="- topic/shortdesc "> 
	Dispatched before the update process begins, just before the
	updater tries to download the update descriptor file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.UpdateEvent.CHECK_FOR_UPDATE</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	Dispatched before the update process begins, just before the
	updater tries to download the update descriptor file. 
	The updater can dispatch this event as a result of directly
	calling the <codeph class="+ topic/ph pr-d/codeph ">checkNow()</codeph> method or because the periodic
	check timer expired. 
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI_air.update.events.UpdateEvent.INITIALIZED_initialized" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">initialized</apiName><shortdesc class="- topic/shortdesc "> 
	
	Dispatched after the initialization is complete.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><apiEventType class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiEventType ">air.update.events.UpdateEvent.INITIALIZED</apiEventType><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events.UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
	
	Dispatched after the initialization is complete. 
	 
	 <p class="- topic/p ">This event has the following read-only properties: </p>
	 <ul class="- topic/ul "><li class="- topic/li ">
	 <p class="- topic/p ">	<codeph class="+ topic/ph pr-d/codeph ">isFirstRun</codeph> (Boolean) <codeph class="+ topic/ph pr-d/codeph ">true</codeph> if
	 this is the first run after a successful update; <codeph class="+ topic/ph pr-d/codeph ">false</codeph> otherwise.</p>
	 </li><li class="- topic/li ">
	 <p class="- topic/p ">	<codeph class="+ topic/ph pr-d/codeph ">previousVersion</codeph> (String) The previous version
	 of the application before the upgrade (set only if <codeph class="+ topic/ph pr-d/codeph ">isfirstRun</codeph> is <codeph class="+ topic/ph pr-d/codeph ">true</codeph>). </p>
	 </li><li class="- topic/li ">
	 <p class="- topic/p ">	<codeph class="+ topic/ph pr-d/codeph ">currentVersion</codeph> (String) The version from
	 the application descriptor file of the currently installed version.</p>
	 </li></ul>
	
	</apiDesc></adobeApiEventDetail></adobeApiEvent><apiConstructor id="air.update:ApplicationUpdaterUI:ApplicationUpdaterUI" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation apiOperation/apiConstructor"><apiName class="- topic/title reference/title apiRef/apiName ">ApplicationUpdaterUI</apiName><shortdesc class="- topic/shortdesc ">
		The constructor function.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiConstructorDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail apiOperation/apiConstructorDetail"><apiConstructorDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiConstructorDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/></apiConstructorDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The constructor function. 
		
		</apiDesc></apiConstructorDetail></apiConstructor><apiOperation id="air.update:ApplicationUpdaterUI:addResources" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">addResources</apiName><shortdesc class="- topic/shortdesc "> 
		 Dynamically adds a new resource bundle for the specified language.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">lang</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">String</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">The language code (such as <codeph class="+ topic/ph pr-d/codeph ">"ro"</codeph> for Romanian).
		 
		 </apiDesc></apiParam><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">res</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">Object</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">The object contains the keys and values for the translation. The keys are the ones from
		 the language property file. The following table lists the possible keys (property names).
		 
		 <p class="- topic/p ">
		 <adobetable class="innertable"><tgroup cols="4" class="- topic/tgroup "><thead class="- topic/thead "><row class="- topic/row "><entry class="- topic/entry "> Key  </entry><entry class="- topic/entry "> English value  </entry><entry class="- topic/entry "> Dialog Box </entry><entry class="- topic/entry "> Description  </entry></row></thead><tbody class="- topic/tbody "><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">appWidth </codeph> </entry><entry class="- topic/entry "> 530  </entry><entry class="- topic/entry "> All  </entry><entry class="- topic/entry "> Width of the dialog box. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleWindow </codeph> </entry><entry class="- topic/entry "> Updating:  </entry><entry class="- topic/entry "> All  </entry><entry class="- topic/entry "> Displayed in the native window title bar before
		 the application name. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleCheck </codeph> </entry><entry class="- topic/entry "> Check for updates  </entry><entry class="- topic/entry "> Check For Updates  </entry><entry class="- topic/entry "> Dialog box title.  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">msgCheck </codeph> </entry><entry class="- topic/entry "> Allow the application to check for updates?  </entry><entry class="- topic/entry "> Check For Updates  </entry><entry class="- topic/entry "> Dialog box message.  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">btnCheck </codeph> </entry><entry class="- topic/entry "> Check for Updates  </entry><entry class="- topic/entry "> Check For Updates  </entry><entry class="- topic/entry "> Check for Updates button label.  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">btnCancel</codeph> </entry><entry class="- topic/entry "> Cancel  </entry><entry class="- topic/entry "> All dialog boxes with a Cancel button  </entry><entry class="- topic/entry "> Cancel button label. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleCheckNoUpdates </codeph> </entry><entry class="- topic/entry "> No updates available  </entry><entry class="- topic/entry "> CheckForUpdates - No updates available  </entry><entry class="- topic/entry "> Dialog box title. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">msgCheckNoUpdates </codeph> </entry><entry class="- topic/entry "> There are no updates available for the application.  </entry><entry class="- topic/entry "> Check For Updates - No updates available  </entry><entry class="- topic/entry "> Dialog box message.  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">btnClose </codeph> </entry><entry class="- topic/entry "> Close  </entry><entry class="- topic/entry "> All dialog boxes with Close button  </entry><entry class="- topic/entry "> Close button label. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleCheckError </codeph> </entry><entry class="- topic/entry "> Update error  </entry><entry class="- topic/entry "> Check For Updates - Connection Error  </entry><entry class="- topic/entry "> Dialog box title.  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">msgCheckError </codeph> </entry><entry class="- topic/entry "> There was an error checking for updates.
		 Error# {0}  </entry><entry class="- topic/entry "> Check For Updates - Connection Error  </entry><entry class="- topic/entry "> Dialog box message.   {0} will be replaced
		 with the error ID. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleUpdate </codeph> </entry><entry class="- topic/entry "> Update available  </entry><entry class="- topic/entry "> Update Available  </entry><entry class="- topic/entry "> Dialog box title. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">msgUpdate </codeph> </entry><entry class="- topic/entry "> An updated version of the application is
		 available for download.  </entry><entry class="- topic/entry "> Update Available  </entry><entry class="- topic/entry "> Dialog box message. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">lblApplication </codeph> </entry><entry class="- topic/entry "> Application:  </entry><entry class="- topic/entry "> Update Available  </entry><entry class="- topic/entry "> Label displayed before the application name. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">lblInstalledVersion </codeph> </entry><entry class="- topic/entry "> Installed Version:  </entry><entry class="- topic/entry "> Update Available  </entry><entry class="- topic/entry "> Label displayed before the installed version. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">lblAvailableVersion </codeph> </entry><entry class="- topic/entry "> Update Version:  </entry><entry class="- topic/entry "> Update Available  </entry><entry class="- topic/entry "> Label displayed before the update version. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">btnDownload </codeph> </entry><entry class="- topic/entry "> Download now  </entry><entry class="- topic/entry "> Update Available  </entry><entry class="- topic/entry "> Download Now button label.  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">btnDownloadLater </codeph> </entry><entry class="- topic/entry "> Download later  </entry><entry class="- topic/entry "> Update Available  </entry><entry class="- topic/entry "> Download Later button label.  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">lnkReleaseNotes </codeph> </entry><entry class="- topic/entry "> Release notes  </entry><entry class="- topic/entry "> All with release notes link  </entry><entry class="- topic/entry "> The "Release notes" link name.  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleProgress </codeph> </entry><entry class="- topic/entry "> Download progress...  </entry><entry class="- topic/entry "> Download Progress  </entry><entry class="- topic/entry "> Dialog box title. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">msgProgress </codeph> </entry><entry class="- topic/entry "> Downloading update  </entry><entry class="- topic/entry "> Download Progress  </entry><entry class="- topic/entry "> Dialog box message. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleDownloadError </codeph> </entry><entry class="- topic/entry "> Download failed  </entry><entry class="- topic/entry "> Download Error  </entry><entry class="- topic/entry "> Dialog box title. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">msgDownloadError </codeph> </entry><entry class="- topic/entry "> There was an error downloading the update.
		 Error# {0}  </entry><entry class="- topic/entry "> Download Error  </entry><entry class="- topic/entry "> Dialog box message.   {0}
		 will be replaced with the error ID.  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleInstall </codeph> </entry><entry class="- topic/entry "> Install update  </entry><entry class="- topic/entry "> Install Update  </entry><entry class="- topic/entry "> Dialog box title. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">msgInstall </codeph> </entry><entry class="- topic/entry "> The update for the application is downloaded
		 and ready to be installed.  </entry><entry class="- topic/entry "> Install Update  </entry><entry class="- topic/entry "> Dialog box message. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">btnInstall </codeph> </entry><entry class="- topic/entry "> Install now  </entry><entry class="- topic/entry "> Install Update  </entry><entry class="- topic/entry "> "Install" button label  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">btnInstallLater </codeph> </entry><entry class="- topic/entry "> Postpone until restart  </entry><entry class="- topic/entry "> Install Update  </entry><entry class="- topic/entry "> "Postpone until restart" button label  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleFileUpdate </codeph> </entry><entry class="- topic/entry "> Update available  </entry><entry class="- topic/entry "> File - Update Available  </entry><entry class="- topic/entry "> Dialog box title.  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">msgFileUpdate </codeph> </entry><entry class="- topic/entry "> The file contains an updated version of
		 the application. Install?  </entry><entry class="- topic/entry "> File - Update Available  </entry><entry class="- topic/entry "> Dialog box message. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">lblFile </codeph> </entry><entry class="- topic/entry "> File:  </entry><entry class="- topic/entry "> File - Update Available  </entry><entry class="- topic/entry "> Label displayed before the file name  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleFileNoUpdate </codeph> </entry><entry class="- topic/entry "> No update available  </entry><entry class="- topic/entry "> File - No updates available  </entry><entry class="- topic/entry "> Dialog box title. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">msgFileNoUpdate </codeph> </entry><entry class="- topic/entry "> The file doesn't contain a newer version
		 of the application.  </entry><entry class="- topic/entry "> File - No updates available  </entry><entry class="- topic/entry "> Dialog box message. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleFileError </codeph> </entry><entry class="- topic/entry "> File error  </entry><entry class="- topic/entry "> File - Error  </entry><entry class="- topic/entry "> Dialog box title.  </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">msgFileError </codeph> </entry><entry class="- topic/entry "> An error occurred validating the update
		 file. Error# {0}  </entry><entry class="- topic/entry "> File - Error  </entry><entry class="- topic/entry "> Dialog box message.   {0}
		 will be replaced with the error ID. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">titleUnexpectedError </codeph> </entry><entry class="- topic/entry "> Unexpected error  </entry><entry class="- topic/entry "> Unexpected Error  </entry><entry class="- topic/entry "> Dialog box title. </entry></row><row class="- topic/row "><entry class="- topic/entry "> <codeph class="+ topic/ph pr-d/codeph ">msgUnexpectedError </codeph> </entry><entry class="- topic/entry "> An unexpected error occurred. Error# {0}  </entry><entry class="- topic/entry "> Unexpected Error  </entry><entry class="- topic/entry "> Dialog box message.   {0}
		 will be replaced with the error ID.  </entry></row></tbody></tgroup></adobetable>
		 
		 </p>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc "> 
		 Dynamically adds a new resource bundle for the specified language. 
		 JavaScript developers use this method to dynamically add a new language for the 
		 dialog boxes that the application updater UI displays. (Flex developers
		 can directly add a new language to the "ApplicationUpdaterDialogs"
		 resource bundle.)
		 
		 </apiDesc></apiOperationDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdaterUI/localeChain" class="- topic/link "><linktext class="- topic/linktext ">localeChain</linktext></link></related-links></apiOperation><apiOperation id="air.update:ApplicationUpdaterUI:cancelUpdate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">cancelUpdate</apiName><shortdesc class="- topic/shortdesc ">
		Cancels the update process.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Cancels the update process. Calling this method cancels any
		pending downloads, deleting any incomplete downloaded files, and
		restarts the periodic check timer.
		
		<p class="- topic/p ">The update process can be canceled at any time except when the state
		machine is in "uninitialized" or "initializing" state. It does nothing 
		when it is called in one of the "uninitialized" or "initializing"
		states.</p>
		
		</apiDesc></apiOperationDetail></apiOperation><apiOperation id="air.update:ApplicationUpdaterUI:checkNow" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">checkNow</apiName><shortdesc class="- topic/shortdesc ">
		Starts the update process.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Starts the update process. Calling
		this method does not stop the periodic timer; however, the method detects
		that an update process is running and will skip the current iteration.
		
		<p class="- topic/p ">This method only executes if the current state is "Ready". </p>
		
		<p class="- topic/p ">This method can result in the updater object dispatching the following event:</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdaterUI:checkNow_checkForUpdate" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">checkForUpdate</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dispatched just before the update process begins.
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Dispatched just before the update process begins.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdaterUI:initialize" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">initialize</apiName><shortdesc class="- topic/shortdesc ">
		 Initializes the updater.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		 Initializes the updater. Calling this method
		does the following: 
		
		<p class="- topic/p "><ol class="- topic/ol "><li class="- topic/li ">
		<p class="- topic/p ">It initializes the update framework,
		silently (and synchronously) installing any pending updates. You
		should call this method during application startup, since it may
		restart the application.</p>
		</li><li class="- topic/li ">
		
		<p class="- topic/p ">It checks if there is a postponed update and installs it.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p ">If something went wrong with a prior update, it clears the
		update file and version information from the storage area.</p>
		</li><li class="- topic/li ">
		<p class="- topic/p ">If the periodic timer delay has expired, it starts the update process; otherwise
		it starts the periodic timer. However, when testing an application using 
		the AIR Debug Launcher (ADL) application, attempting to update the 
		application results in a IllegalOperationError exception.</p>
		</li></ol></p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdaterUI:initialize_initialized" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">initialized</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:UpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">The initialization is complete. 
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">The initialization is complete.</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI:initialize_error" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">error</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">flash.events:ErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">There is an error during initialization.
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">There is an error during initialization.</shortdesc></adobeApiEvent></apiOperation><apiOperation id="air.update:ApplicationUpdaterUI:installFromAIRFile" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiOperation/apiOperation "><apiName class="- topic/title reference/title apiRef/apiName ">installFromAIRFile</apiName><shortdesc class="- topic/shortdesc ">
		Starts the update process using a local AIR file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiOperationDetail class="- topic/body reference/refbody apiRef/apiDetail apiOperation/apiOperationDetail "><apiOperationDef class="- topic/section reference/section apiRef/apiDef apiOperation/apiOperationDef "><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiReturn class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiReturn "><apiType value="void" name="type" class="- topic/state reference/state apiRef/apiType "/></apiReturn><apiParam class="- topic/ph reference/ph apiRef/apiDefItem apiOperation/apiParam "><apiItemName class="- topic/keyword reference/keyword apiRef/apiItemName ">file</apiItemName><apiOperationClassifier class="- topic/xref reference/xref apiRef/apiRelation apiOperation/apiOperationClassifier ">flash.filesystem:File</apiOperationClassifier><apiDesc class="- topic/section reference/section apiRef/apiDesc ">The local AIR file to install.
		
		</apiDesc></apiParam></apiOperationDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Starts the update process using a local AIR file. 
		
		<p class="- topic/p ">Calling this
		method has no effect if an update process is running (if the state
		is not <codeph class="+ topic/ph pr-d/codeph ">"Downloaded"</codeph>).</p>
		
		<p class="- topic/p ">This function is useful
		for an application that has the <codeph class="+ topic/ph pr-d/codeph ">customUpdateUI</codeph> element
		set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph> in the application descriptor file.</p>
		
		<p class="- topic/p ">When testing an application using the AIR Debug Launcher (ADL) application, 
		calling this method results in an IllegalOperationError exception.</p>
		
		</apiDesc></apiOperationDetail><adobeApiEvent id="air.update:ApplicationUpdaterUI:installFromAIRFile_fileUpdateStatus" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">fileUpdateStatus</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:StatusFileUpdateEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dispatched after the updater successfully 
		validates the AIR file.
		
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Dispatched after the updater successfully 
		validates the AIR file.</shortdesc></adobeApiEvent><adobeApiEvent id="air.update:ApplicationUpdaterUI:installFromAIRFile_updateError" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef adobeApiEvent/adobeApiEvent "><apiName class="- topic/title reference/title apiRef/apiName ">updateError</apiName><prolog class="- topic/prolog "/><adobeApiEventDetail class="- topic/body reference/refbody apiRef/apiDetail adobeApiEvent/adobeApiEventDetail "><adobeApiEventDef class="- topic/section reference/section apiRef/apiDef adobeApiEvent/adobeApiEventDef "><adobeApiEventClassifier class="- topic/xref reference/xref apiRef/apiRelation adobeApiEvent/adobeApiEventClassifier ">air.update.events:StatusFileUpdateErrorEvent</adobeApiEventClassifier><apiGeneratedEvent class="- topic/state reference/state apiRef/apiQualifier adobeApiEvent/apiGeneratedEvent "/></adobeApiEventDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">Dispatched if an error occurs while trying 
		parse the update descriptor file.
		 
		</apiDesc></adobeApiEventDetail><shortdesc class="- topic/shortdesc ">Dispatched if an error occurs while trying 
		parse the update descriptor file.</shortdesc></adobeApiEvent></apiOperation><apiValue id="air.update:ApplicationUpdaterUI:configurationFile:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">configurationFile</apiName><shortdesc class="- topic/shortdesc ">
		The location of the configuration file that sets the values for delay and
		updateURL properties.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The location of the configuration file that sets the values for <codeph class="+ topic/ph pr-d/codeph ">delay</codeph> and
		<codeph class="+ topic/ph pr-d/codeph ">updateURL</codeph> properties. It also has settings for determining whether the application
		displays various confirmation dialog boxes during the update process. 
		If this property points to a non-existent file, calling the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> method
		results in an Error being thrown.
		
		<p class="- topic/p ">Here is a sample configuration file:</p>
		
		<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> &lt;?xml version="1.0" encoding="utf-8"?&gt; 
 		&lt;configuration xmlns="http://ns.adobe.com/air/framework/update/configuration/1.0" &gt;
 		  &lt;url&gt;app:/server/update.xml&lt;/url&gt;
 		  &lt;delay&gt;1&lt;/delay&gt;
		   &lt;defaultUI&gt;
		      &lt;dialog name="checkForUpdate" visible="true" /&gt;
		       &lt;dialog name="downloadUpdate" visible="false" /&gt;
		       &lt;dialog name="downloadProgress" visible="true" /&gt;
		       &lt;dialog name="installUpdate" visible="true" /&gt;    
		   &lt;/defaultUI&gt;
		&lt;/configuration&gt;</codeblock>
		
		<p class="- topic/p ">Instead of loading a configuration file, you can use <ph class="- topic/ph ">ActionScript</ph> 
		 code to set the following properties of the ApplicationUpdaterUI
		object: <codeph class="+ topic/ph pr-d/codeph ">delay</codeph>, <codeph class="+ topic/ph pr-d/codeph ">isCheckForUpdateVisible</codeph>, <codeph class="+ topic/ph pr-d/codeph ">isDownloadProgressVisible</codeph>,
		<codeph class="+ topic/ph pr-d/codeph ">isDownloadUpdateVisible</codeph>, <codeph class="+ topic/ph pr-d/codeph ">isFileUpdateVisible</codeph>, <codeph class="+ topic/ph pr-d/codeph ">isInstallUpdateVisible</codeph>, 
		and <codeph class="+ topic/ph pr-d/codeph ">updateURL</codeph> properties.</p>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdaterUI/delay" class="- topic/link "><linktext class="- topic/linktext ">delay</linktext></link><link href="air.update.xml#ApplicationUpdaterUI/updateURL" class="- topic/link "><linktext class="- topic/linktext ">updateURL</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdaterUI:currentVersion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">currentVersion</apiName><shortdesc class="- topic/shortdesc ">
		The current version of the application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The current version of the application. This property is set during
		a call to the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> method. It is set to
		the version from the application descriptor file.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:delay:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">delay</apiName><shortdesc class="- topic/shortdesc ">
		The interval, in days, between periodic checks of new updates.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Number</apiValueClassifier><apiDefaultValue>0
		
		</apiDefaultValue></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The interval, in days, between periodic checks of new updates.
		
		<p class="- topic/p ">A value of 0 (the default value) indicates
		that the timer is not active, so no periodic check is done. The delay
		can be set either via this property or via the configuration file.
		When the value is set using both methods, the value set using this
		property is used.</p>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdaterUI/configurationFile" class="- topic/link "><linktext class="- topic/linktext ">configurationFile</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isCheckForUpdateVisible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isCheckForUpdateVisible</apiName><shortdesc class="- topic/shortdesc ">
		Enables the visibility of the Check for
		Update, No Update, and Update Error dialog boxes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Enables the visibility of the Check for
		Update, No Update, and Update Error dialog boxes. When set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph>,
		the updater displays these dialog boxes as part of the
		update process. This can also be set in the update configuration
		file. A value set using this property overrides the setting in the
		update configuration file. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isDownloadProgressVisible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isDownloadProgressVisible</apiName><shortdesc class="- topic/shortdesc ">
		
		Enables the visibility of the Download Update
		dialog box.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		
		Enables the visibility of the Download Update
		dialog box. When set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, the updater
		displays this dialog box as part of the update process. This can
		also be set in the update configuration file. A value set using
		this property overrides the setting in the update configuration file.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isDownloadUpdateVisible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isDownloadUpdateVisible</apiName><shortdesc class="- topic/shortdesc ">
		Enables the visibility of the Download Update
		dialog box.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Enables the visibility of the Download Update
		dialog box. When set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, the updater
		displays these dialog boxes as part of the update process. This
		can also be set in the update configuration file. A value set using
		this property overrides the setting in the update configuration file.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isFileUpdateVisible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isFileUpdateVisible</apiName><shortdesc class="- topic/shortdesc ">
		
		Enables the visibility of the File Update,
		File No Update, and File Error dialog boxes.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		
		Enables the visibility of the File Update,
		File No Update, and File Error dialog boxes. When set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph>,
		the updater displays these dialog boxes as part of the
		update process. This can also be set in the update configuration
		file. A value set using this property overrides the setting in the
		update configuration file.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isFirstRun:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isFirstRun</apiName><shortdesc class="- topic/shortdesc ">
		Whether this is the first run after a successful update (true) or not 
		(false).</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Whether this is the first run after a successful update (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>) or not 
		(<codeph class="+ topic/ph pr-d/codeph ">false</codeph>). The updater sets this value during the call to the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> 
		method. The developer should check that <codeph class="+ topic/ph pr-d/codeph ">isFirstRun</codeph> is set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph> if
		there is a need to migrate data from one version to another.
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdaterUI/wasPendingUpdate" class="- topic/link "><linktext class="- topic/linktext ">wasPendingUpdate</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isInstallUpdateVisible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isInstallUpdateVisible</apiName><shortdesc class="- topic/shortdesc ">
		Enables the visibility of the Install Update
		dialog box.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Enables the visibility of the Install Update
		dialog box. When set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, the updater
		displays this dialog box as part of the update process. This can
		also be set in the update configuration file. A value set using
		this property overrides the setting in the update configuration file.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isNewerVersionFunction:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isNewerVersionFunction</apiName><shortdesc class="- topic/shortdesc ">
		A function that the updater should use to perform version comparisons.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Function</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		A function that the updater should use to perform version comparisons.
		By default, the update framework does a
		version comparison to detect whether the version from the
		remote site is newer than the version of the installed application.
		However, sometimes the default comparison does not match the developer's
		versioning scheme. Set this property to provide a new function that
		does the comparison. 
		
		<p class="- topic/p ">The default comparision function accepts
		versions like <i class="+ topic/ph hi-d/i ">x.y.z</i>, where x, y, and z can contain letters
		and digits. There are some special conditions that the default comparision function
		recognizes. If the test function finds <codeph class="+ topic/ph pr-d/codeph ">"alpha"</codeph>, <codeph class="+ topic/ph pr-d/codeph ">"beta"</codeph>, 
		or <codeph class="+ topic/ph pr-d/codeph ">"rc"</codeph> in the version strings,
		the order is <codeph class="+ topic/ph pr-d/codeph ">alpha</codeph> &lt; <codeph class="+ topic/ph pr-d/codeph ">beta</codeph> &lt; <codeph class="+ topic/ph pr-d/codeph ">rc</codeph>.</p>
		
		</apiDesc><example conref="examples\ApplicationUpdater.configurationFunction.1.as" class="- topic/example "> The following code defines a custom function, <codeph class="+ topic/ph pr-d/codeph ">customFn</codeph>, for the <codeph class="+ topic/ph pr-d/codeph ">appUpdate</codeph> updater object. 
 The example function is intentionally simple. Your custom function should return a Boolean value based on the rules of your
 versioning scheme.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock ">
appUpdate.isNewerVersionFunction = customFn; 

function customFn (currentVersion:String, updateVersion:String):Boolean 
{
    return updateVersion &gt; currentVersion;
}
</codeblock></example></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isUnexpectedErrorVisible:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isUnexpectedErrorVisible</apiName><shortdesc class="- topic/shortdesc ">
		Enables the visibility of the Unexpected
		Error dialog box.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Enables the visibility of the Unexpected
		Error dialog box. When set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph>, the Application
		Updater displays this dialog box as part of the update process.
		This can also be set in the update configuration file. A value set
		using this property overrides the setting in the update configuration
		file. 
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:isUpdateInProgress:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">isUpdateInProgress</apiName><shortdesc class="- topic/shortdesc ">
		A Boolean property, which is true if
		an update is running, false otherwise.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		A Boolean property, which is <codeph class="+ topic/ph pr-d/codeph ">true</codeph> if
		an update is running, <codeph class="+ topic/ph pr-d/codeph ">false</codeph> otherwise.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:localeChain:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">localeChain</apiName><shortdesc class="- topic/shortdesc ">
		An array defining the locale chain used
		by the user interface.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Array</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		An array defining the locale chain used
		by the user interface. Typically, only JavaScript (HTML) developers
		use this property. 
		
		<p class="- topic/p ">Flex developers can use the ResourceManager to handle the locale chain. </p>
		
		<p class="- topic/p ">By default, in an HTML-based application, the languages are sorted between those languages in
		the <codeph class="+ topic/ph pr-d/codeph ">Capabilities.languages</codeph> array and the ten languages supported by the
		user interface. If no match is found, the user interface uses the English language. </p>
		
		<p class="- topic/p ">This JavaScript example uses the AIR HTML localization framework, included in the AIR SDK. It sorts
		the languages against the list of languages, and then it sets English as the default fallback language:</p>
		
		<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock "> appUpdater.addResources("ro_RO", {titleCheck: "Titlu", msgCheck: "Mesaj", btnCheck: "Buton"});
		appUpdater.addResources("hu", {titleCheck: "Cím", msgCheck: "Üzenet"}); 
		var languages = ["ro", "hu"];
		languages = languages.concat(air.Capabilities.languages);
		var sortedLanguages = air.Localizer.sortLanguagesByPreference(languages, air.Capabilities.language, "en-US");  
		sortedLanguages.push("en-US");
		appUpdater.localeChain = sortedLanguages;</codeblock>
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdaterUI/addResources()" class="- topic/link "><linktext class="- topic/linktext ">addResources()</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdaterUI:previousApplicationStorageDirectory:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">previousApplicationStorageDirectory</apiName><shortdesc class="- topic/shortdesc ">
		The previous location of the application storage directory, if it changed
		after an update.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">flash.filesystem:File</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The previous location of the application storage directory, if it changed
		after an update. The application storage directory location changes after
		an upgrade with a certificate migration. If there is no certificate
		migration, the application storage directory does not change when the
		user updates the application. and this property is set to <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
		This property is set during a call to the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> method. 
		
		<p class="- topic/p ">A developer can sign new version of AIR application with a new certificate
		if the developer uses the <codeph class="+ topic/ph pr-d/codeph ">-migrate</codeph> option when packaging the AIR
		file with ADT. If a new version of an AIR application uses a new signing certificate, 
		the local storage directory of the application changes when the user installs  
		the new version. Use this property to transfer data from the old application
		storage directory to the new application storage directory 
		(<codeph class="+ topic/ph pr-d/codeph ">File.applicationStorageDirectory</codeph>). For more information,
		see "Signing an AIR file to change the application certificate" in the 
		"Creating an AIR application using the command line tools" chapter of the 
		Adobe AIR developer's guide.</p>
		
		 </apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:previousVersion:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">previousVersion</apiName><shortdesc class="- topic/shortdesc ">
		The previous version of the application.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The previous version of the application. This property is set during
		a call to the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> method. Returns the <i class="+ topic/ph hi-d/i ">previous version</i> of
		the application before the upgrade (set only if <codeph class="+ topic/ph pr-d/codeph ">isfirstRun</codeph> is <codeph class="+ topic/ph pr-d/codeph ">true</codeph>);
		otherwise it is set to <codeph class="+ topic/ph pr-d/codeph ">null</codeph>.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:updateDescriptor:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">updateDescriptor</apiName><shortdesc class="- topic/shortdesc ">
		The content of the update descriptor file downloaded from the update URL.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">XML</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The content of the update descriptor file downloaded from the update URL. This property is
		non-null only after the updater object dispatches an <codeph class="+ topic/ph pr-d/codeph ">updateStatus</codeph> event.
		
		</apiDesc></apiValueDetail></apiValue><apiValue id="air.update:ApplicationUpdaterUI:updateURL:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">updateURL</apiName><shortdesc class="- topic/shortdesc ">
		The location of the update descriptor file.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="readwrite" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">String</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		The location of the update descriptor file. Any location
		valid for a URLRequest path is accepted. This is the only mandatory
		setting required by the updater. You can set the update URL either via this
		property or via the configuration file. When the value is set using
		both methods, the updater uses the value set using this property.
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdaterUI/configurationFile" class="- topic/link "><linktext class="- topic/linktext ">configurationFile</linktext></link></related-links></apiValue><apiValue id="air.update:ApplicationUpdaterUI:wasPendingUpdate:get" ditaarch:DITAArchVersion="1.0" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                              (topic ut-d) (topic pr-d api-d)" class="- topic/topic reference/reference apiRef/apiRef apiValue/apiValue "><apiName class="- topic/title reference/title apiRef/apiName ">wasPendingUpdate</apiName><shortdesc class="- topic/shortdesc ">
		Whether there was a postponed update, even if it failed 
		to install (true); false otherwise.</shortdesc><prolog class="- topic/prolog "><asMetadata class="+ topic/metadata adobe-api-d/asMetadata "><apiVersion class="+ topic/ph adobe-api-d/apiVersion "><apiLanguage version="3.0" class="+ topic/ph adobe-api-d/apiLanguage "/><apiPlatform description="" name="AIR" version="1.5" class="+ topic/ph adobe-api-d/apiPlatform "/></apiVersion></asMetadata></prolog><apiValueDetail class="- topic/body reference/refbody apiRef/apiDetail apiValue/apiValueDetail "><apiValueDef class="- topic/section reference/section apiRef/apiDef apiValue/apiValueDef "><apiProperty class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiProperty "/><apiAccess value="public" class="- topic/state reference/state apiRef/apiQualifier adobe-api-d/apiAccess "/><apiDynamic class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiDynamic "/><apiValueAccess value="read" class="+ topic/state reference/state apiRef/apiQualifier adobe-api-d/apiValueAccess "/><apiValueClassifier class="- topic/xref reference/xref apiRef/apiRelation apiValue/apiValueClassifier ">Boolean</apiValueClassifier></apiValueDef><apiDesc class="- topic/section reference/section apiRef/apiDesc ">
		Whether there was a postponed update, even if it failed 
		to install (<codeph class="+ topic/ph pr-d/codeph ">true</codeph>); <codeph class="+ topic/ph pr-d/codeph ">false</codeph> otherwise.
		The updater sets this property during a call to the <codeph class="+ topic/ph pr-d/codeph ">initialize()</codeph> method. 
		Use the <codeph class="+ topic/ph pr-d/codeph ">wasPendingUpdate</codeph> and <codeph class="+ topic/ph pr-d/codeph ">isFirstRun</codeph> properties
		to check if an update failed to install (in which case <codeph class="+ topic/ph pr-d/codeph ">wasPendingUpdate</codeph>
		is set to <codeph class="+ topic/ph pr-d/codeph ">true</codeph> and <codeph class="+ topic/ph pr-d/codeph ">isFirstRun</codeph> is set to <codeph class="+ topic/ph pr-d/codeph ">false</codeph>).
		
		</apiDesc></apiValueDetail><related-links class="- topic/related-links "><link href="air.update.xml#ApplicationUpdaterUI/isFirstRun" class="- topic/link "><linktext class="- topic/linktext ">isFirstRun</linktext></link></related-links></apiValue></apiClassifier></apiPackage>